#include<stdio.h>
#include<math.h>

union fl{
	float f;
	int n;
};

struct{
	
	unsigned int sign : 1;
	unsigned int exp : 8;
	unsigned int man : 23;
}bits;


int main(){
	
	union fl a, b;
	
	scanf("%f%f", &a.f, &b.f);

	if (b.f == -1){
		a.f = sqrt(a.f);
	}
	else{
		a.f = a.f/b.f;
	}
	
	
	bits.sign = (a.n >>31) & 1; 
	bits.exp = (a.n >> 23) & 0xFF;
	bits.man = (a.n  & 0X7FFFFF);
	
	if (bits.exp == 0XFF){
		if (bits.man == 0){
			printf(bits.sign ? "-inf\n" : "+inf\n");
		}
		else{
			printf("NaN\n");
		}
		return 0;
	}
	
	printf("float = (-1)^%d * 1.%d * 2^(%d)", bits.sign, bits.man, (bits.exp - 127));
	
	return 0;
}
